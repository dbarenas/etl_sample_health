{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-05-27T07:25:49.299236Z", "invocation_id": "09c01be5-c908-4c40-a322-21f3bfe1bb53", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2025-05-27T07:25:49.042809Z", "completed_at": "2025-05-27T07:25:49.056374Z"}, {"name": "execute", "started_at": "2025-05-27T07:25:49.057025Z", "completed_at": "2025-05-27T07:25:49.214328Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17701268196105957, "adapter_response": {}, "message": "Database Error in model stg_device_readings (models/staging/stg_device_readings.sql)\n  relation \"public.device_readings\" does not exist\n  LINE 10:     SELECT * FROM \"etl_data\".\"public\".\"device_readings\"\n                             ^\n  compiled code at target/run/patient_etl_analytics/models/staging/stg_device_readings.sql", "failures": null, "unique_id": "model.patient_etl_analytics.stg_device_readings", "compiled": true, "compiled_code": "-- dbt_project/models/staging/stg_device_readings.sql\n\nWITH source AS (\n    SELECT * FROM \"etl_data\".\"public\".\"device_readings\"\n)\n\nSELECT\n    id AS device_reading_id, -- Renaming for clarity\n    patient_id, -- This should match the patient_id from stg_patients (e.g., patients.id)\n    timestamp AS reading_timestamp,\n    glucose,\n    systolic_bp,\n    diastolic_bp,\n    weight\nFROM\n    source\nWHERE\n    patient_id IS NOT NULL -- Basic data quality filter, if patient_id is crucial for joining\n    AND timestamp IS NOT NULL -- Basic data quality filter\n    -- Add other filters if necessary, e.g., ensuring numeric fields are valid if not handled by source tests", "relation_name": "\"etl_data\".\"public\".\"stg_device_readings\"", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-05-27T07:25:49.226297Z", "completed_at": "2025-05-27T07:25:49.235679Z"}, {"name": "execute", "started_at": "2025-05-27T07:25:49.236770Z", "completed_at": "2025-05-27T07:25:49.264211Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04191756248474121, "adapter_response": {}, "message": "Database Error in model stg_patients (models/staging/stg_patients.sql)\n  relation \"public.patients\" does not exist\n  LINE 10:     SELECT * FROM \"etl_data\".\"public\".\"patients\"\n                             ^\n  compiled code at target/run/patient_etl_analytics/models/staging/stg_patients.sql", "failures": null, "unique_id": "model.patient_etl_analytics.stg_patients", "compiled": true, "compiled_code": "-- dbt_project/models/staging/stg_patients.sql\n\nWITH source AS (\n    SELECT * FROM \"etl_data\".\"public\".\"patients\"\n)\n\nSELECT\n    id AS patient_id, -- Renaming for clarity in downstream models if desired, or keep as 'id'\n    name AS patient_name,\n    dob AS date_of_birth,\n    gender,\n    sex\n    -- email, phone, address can be added if needed for analytics\n    -- For biometric analytics, these might not be immediately necessary\nFROM\n    source", "relation_name": "\"etl_data\".\"public\".\"stg_patients\"", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.patient_etl_analytics.patient_biometric_summary", "compiled": false, "compiled_code": null, "relation_name": "\"etl_data\".\"public\".\"patient_biometric_summary\"", "batch_results": null}], "elapsed_time": 0.4689137935638428, "args": {"state_modified_compare_more_unrendered_values": false, "introspect": true, "defer": false, "partial_parse_file_diff": true, "exclude": [], "empty": false, "profiles_dir": ".", "require_explicit_package_overrides_for_builtin_materializations": true, "send_anonymous_usage_stats": true, "require_yaml_configuration_for_mf_time_spines": false, "log_level_file": "debug", "show_resource_report": false, "which": "run", "favor_state": false, "invocation_command": "dbt run --profiles-dir .", "static_parser": true, "use_colors": true, "print": true, "version_check": true, "require_nested_cumulative_type_params": false, "log_format": "default", "macro_debugging": false, "require_resource_names_without_spaces": false, "log_format_file": "debug", "log_level": "info", "use_colors_file": true, "state_modified_compare_vars": false, "log_path": "/app/dbt_project/logs", "skip_nodes_if_on_run_start_fails": false, "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "printer_width": 80, "require_batched_execution_for_custom_microbatch_strategy": false, "quiet": false, "populate_cache": true, "project_dir": "/app/dbt_project", "source_freshness_run_project_hooks": false, "cache_selected_only": false, "vars": {}, "strict_mode": false, "log_file_max_bytes": 10485760, "write_json": true, "select": []}}